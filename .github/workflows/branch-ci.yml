name: Branch CI/CD Pipeline

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        
    - name: Run unit tests
      run: |
        python -m pytest tests/ -v --tb=short
        
    - name: Run enhanced classifier tests
      run: |
        python test_enhanced_classifier.py
        
    - name: Run departmental routing tests
      run: |
        python test_departmental_routing.py
        
    - name: Run HTML cleaning tests
      run: |
        python test_html_cleaning.py
        
    - name: Run system integration tests
      run: |
        python test_system.py

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        
    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff
        
    - name: Run Ruff linter
      run: |
        ruff check . --output-format=github
        
    - name: Run Ruff formatter check
      run: |
        ruff format --check .

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Bandit
      run: |
        python -m pip install bandit[toml]
        
    - name: Run Bandit scan
      run: |
        bandit -r . -f sarif -o bandit-report.sarif || true
        
  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
        
    - name: Build package
      run: |
        python -m build
        
    - name: Verify package integrity
      run: |
        python -m twine check dist/*
        
  status:
    name: CI Status
    runs-on: ubuntu-latest
    needs: [test, lint, security, build]
    if: always()
    
    steps:
    - name: Check all jobs status
      run: |
        if [[ "${{ needs.test.result }}" == "success" && 
              "${{ needs.lint.result }}" == "success" && 
              "${{ needs.security.result }}" == "success" && 
              "${{ needs.build.result }}" == "success" ]]; then
          echo "All CI jobs passed ✅"
          exit 0
        else
          echo "Some CI jobs failed ❌"
          exit 1
        fi